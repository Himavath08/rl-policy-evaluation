{"cells":[{"cell_type":"code","source":["import warnings ; warnings.filterwarnings('ignore')\n","\n","import gym\n","import numpy as np\n","\n","import random\n","import warnings\n","\n","warnings.filterwarnings('ignore', category=DeprecationWarning)\n","np.set_printoptions(suppress=True)\n","random.seed(123); np.random.seed(123);"],"metadata":{"id":"4bzGhrlc4_ue"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip install git+https://github.com/mimoralea/gym-walk#egg=gym-walk"],"metadata":{"id":"_D-C6JDP5TOn","executionInfo":{"status":"ok","timestamp":1741758547639,"user_tz":-330,"elapsed":6359,"user":{"displayName":"","userId":""}},"outputId":"ddb28ee7-206f-4bac-ca45-e40a4a0e3867","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting gym-walk\n","  Cloning https://github.com/mimoralea/gym-walk to /tmp/pip-install-9oa0p0vr/gym-walk_4f87f7da8a5141d49353a659803df1b1\n","  Running command git clone --filter=blob:none --quiet https://github.com/mimoralea/gym-walk /tmp/pip-install-9oa0p0vr/gym-walk_4f87f7da8a5141d49353a659803df1b1\n","  Resolved https://github.com/mimoralea/gym-walk to commit b915b94cf2ad16f8833a1ad92ea94e88159279f5\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: gym in /usr/local/lib/python3.11/dist-packages (from gym-walk) (0.25.2)\n","Requirement already satisfied: numpy>=1.18.0 in /usr/local/lib/python3.11/dist-packages (from gym->gym-walk) (1.26.4)\n","Requirement already satisfied: cloudpickle>=1.2.0 in /usr/local/lib/python3.11/dist-packages (from gym->gym-walk) (3.1.1)\n","Requirement already satisfied: gym_notices>=0.0.4 in /usr/local/lib/python3.11/dist-packages (from gym->gym-walk) (0.0.8)\n","Building wheels for collected packages: gym-walk\n","  Building wheel for gym-walk (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for gym-walk: filename=gym_walk-0.0.2-py3-none-any.whl size=5377 sha256=0fae2339b8712832aa0004c4246552704cd6c4441ba38398d52d86fcb90d3291\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-pka4lsyf/wheels/60/02/77/2dd9f31df8d13bc7c014725f4002e29d0fc3ced5e8ac08e1cf\n","Successfully built gym-walk\n","Installing collected packages: gym-walk\n","Successfully installed gym-walk-0.0.2\n"]}]},{"cell_type":"code","source":["def print_policy(pi, P, action_symbols=('<', 'v', '>', '^'), n_cols=4, title='Policy:'):\n","    print(title)\n","    arrs = {k:v for k,v in enumerate(action_symbols)}\n","    for s in range(len(P)):\n","        a = pi(s)\n","        print(\"| \", end=\"\")\n","        if np.all([done for action in P[s].values() for _, _, _, done in action]):\n","            print(\"\".rjust(9), end=\" \")\n","        else:\n","            print(str(s).zfill(2), arrs[a].rjust(6), end=\" \")\n","        if (s + 1) % n_cols == 0: print(\"|\")"],"metadata":{"id":"DwZyh0xi5kV4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def print_state_value_function(V, P, n_cols=4, prec=3, title='State-value function:'):\n","    print(title)\n","    for s in range(len(P)):\n","        v = V[s]\n","        print(\"| \", end=\"\")\n","        if np.all([done for action in P[s].values() for _, _, _, done in action]):\n","            print(\"\".rjust(9), end=\" \")\n","        else:\n","            print(str(s).zfill(2), '{}'.format(np.round(v, prec)).rjust(6), end=\" \")\n","        if (s + 1) % n_cols == 0: print(\"|\")"],"metadata":{"id":"acsPqRSq5pSO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def probability_success(env, pi, goal_state, n_episodes=100, max_steps=200):\n","    random.seed(123); np.random.seed(123) ; env.seed(123)\n","    results = []\n","    for _ in range(n_episodes):\n","        state, done, steps = env.reset(), False, 0\n","        while not done and steps < max_steps:\n","            state, _, done, h = env.step(pi(state))\n","            steps += 1\n","        results.append(state == goal_state)\n","    return np.sum(results)/len(results)"],"metadata":{"id":"QdR-hFUx5sL1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def mean_return(env, pi, n_episodes=100, max_steps=200):\n","    random.seed(123); np.random.seed(123) ; env.seed(123)\n","    results = []\n","    for _ in range(n_episodes):\n","        state, done, steps = env.reset(), False, 0\n","        results.append(0.0)\n","        while not done and steps < max_steps:\n","            state, reward, done, _ = env.step(pi(state))\n","            results[-1] += reward\n","            steps += 1\n","    return np.mean(results)\n"],"metadata":{"id":"QLbxzS_Z5vfC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["env = gym.make('FrozenLake-v1')\n","P = env.env.P\n","init_state = env.reset()\n","goal_state = 15\n","LEFT, DOWN, RIGHT, UP = range(4)"],"metadata":{"id":"kvTF52wL5zF6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["P"],"metadata":{"id":"CHq2-1sb6STR","executionInfo":{"status":"ok","timestamp":1741758759056,"user_tz":-330,"elapsed":27,"user":{"displayName":"","userId":""}},"outputId":"31e368bf-b124-49e1-f5ad-9887964efa45","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{0: {0: [(0.3333333333333333, 0, 0.0, False),\n","   (0.3333333333333333, 0, 0.0, False),\n","   (0.3333333333333333, 4, 0.0, False)],\n","  1: [(0.3333333333333333, 0, 0.0, False),\n","   (0.3333333333333333, 4, 0.0, False),\n","   (0.3333333333333333, 1, 0.0, False)],\n","  2: [(0.3333333333333333, 4, 0.0, False),\n","   (0.3333333333333333, 1, 0.0, False),\n","   (0.3333333333333333, 0, 0.0, False)],\n","  3: [(0.3333333333333333, 1, 0.0, False),\n","   (0.3333333333333333, 0, 0.0, False),\n","   (0.3333333333333333, 0, 0.0, False)]},\n"," 1: {0: [(0.3333333333333333, 1, 0.0, False),\n","   (0.3333333333333333, 0, 0.0, False),\n","   (0.3333333333333333, 5, 0.0, True)],\n","  1: [(0.3333333333333333, 0, 0.0, False),\n","   (0.3333333333333333, 5, 0.0, True),\n","   (0.3333333333333333, 2, 0.0, False)],\n","  2: [(0.3333333333333333, 5, 0.0, True),\n","   (0.3333333333333333, 2, 0.0, False),\n","   (0.3333333333333333, 1, 0.0, False)],\n","  3: [(0.3333333333333333, 2, 0.0, False),\n","   (0.3333333333333333, 1, 0.0, False),\n","   (0.3333333333333333, 0, 0.0, False)]},\n"," 2: {0: [(0.3333333333333333, 2, 0.0, False),\n","   (0.3333333333333333, 1, 0.0, False),\n","   (0.3333333333333333, 6, 0.0, False)],\n","  1: [(0.3333333333333333, 1, 0.0, False),\n","   (0.3333333333333333, 6, 0.0, False),\n","   (0.3333333333333333, 3, 0.0, False)],\n","  2: [(0.3333333333333333, 6, 0.0, False),\n","   (0.3333333333333333, 3, 0.0, False),\n","   (0.3333333333333333, 2, 0.0, False)],\n","  3: [(0.3333333333333333, 3, 0.0, False),\n","   (0.3333333333333333, 2, 0.0, False),\n","   (0.3333333333333333, 1, 0.0, False)]},\n"," 3: {0: [(0.3333333333333333, 3, 0.0, False),\n","   (0.3333333333333333, 2, 0.0, False),\n","   (0.3333333333333333, 7, 0.0, True)],\n","  1: [(0.3333333333333333, 2, 0.0, False),\n","   (0.3333333333333333, 7, 0.0, True),\n","   (0.3333333333333333, 3, 0.0, False)],\n","  2: [(0.3333333333333333, 7, 0.0, True),\n","   (0.3333333333333333, 3, 0.0, False),\n","   (0.3333333333333333, 3, 0.0, False)],\n","  3: [(0.3333333333333333, 3, 0.0, False),\n","   (0.3333333333333333, 3, 0.0, False),\n","   (0.3333333333333333, 2, 0.0, False)]},\n"," 4: {0: [(0.3333333333333333, 0, 0.0, False),\n","   (0.3333333333333333, 4, 0.0, False),\n","   (0.3333333333333333, 8, 0.0, False)],\n","  1: [(0.3333333333333333, 4, 0.0, False),\n","   (0.3333333333333333, 8, 0.0, False),\n","   (0.3333333333333333, 5, 0.0, True)],\n","  2: [(0.3333333333333333, 8, 0.0, False),\n","   (0.3333333333333333, 5, 0.0, True),\n","   (0.3333333333333333, 0, 0.0, False)],\n","  3: [(0.3333333333333333, 5, 0.0, True),\n","   (0.3333333333333333, 0, 0.0, False),\n","   (0.3333333333333333, 4, 0.0, False)]},\n"," 5: {0: [(1.0, 5, 0, True)],\n","  1: [(1.0, 5, 0, True)],\n","  2: [(1.0, 5, 0, True)],\n","  3: [(1.0, 5, 0, True)]},\n"," 6: {0: [(0.3333333333333333, 2, 0.0, False),\n","   (0.3333333333333333, 5, 0.0, True),\n","   (0.3333333333333333, 10, 0.0, False)],\n","  1: [(0.3333333333333333, 5, 0.0, True),\n","   (0.3333333333333333, 10, 0.0, False),\n","   (0.3333333333333333, 7, 0.0, True)],\n","  2: [(0.3333333333333333, 10, 0.0, False),\n","   (0.3333333333333333, 7, 0.0, True),\n","   (0.3333333333333333, 2, 0.0, False)],\n","  3: [(0.3333333333333333, 7, 0.0, True),\n","   (0.3333333333333333, 2, 0.0, False),\n","   (0.3333333333333333, 5, 0.0, True)]},\n"," 7: {0: [(1.0, 7, 0, True)],\n","  1: [(1.0, 7, 0, True)],\n","  2: [(1.0, 7, 0, True)],\n","  3: [(1.0, 7, 0, True)]},\n"," 8: {0: [(0.3333333333333333, 4, 0.0, False),\n","   (0.3333333333333333, 8, 0.0, False),\n","   (0.3333333333333333, 12, 0.0, True)],\n","  1: [(0.3333333333333333, 8, 0.0, False),\n","   (0.3333333333333333, 12, 0.0, True),\n","   (0.3333333333333333, 9, 0.0, False)],\n","  2: [(0.3333333333333333, 12, 0.0, True),\n","   (0.3333333333333333, 9, 0.0, False),\n","   (0.3333333333333333, 4, 0.0, False)],\n","  3: [(0.3333333333333333, 9, 0.0, False),\n","   (0.3333333333333333, 4, 0.0, False),\n","   (0.3333333333333333, 8, 0.0, False)]},\n"," 9: {0: [(0.3333333333333333, 5, 0.0, True),\n","   (0.3333333333333333, 8, 0.0, False),\n","   (0.3333333333333333, 13, 0.0, False)],\n","  1: [(0.3333333333333333, 8, 0.0, False),\n","   (0.3333333333333333, 13, 0.0, False),\n","   (0.3333333333333333, 10, 0.0, False)],\n","  2: [(0.3333333333333333, 13, 0.0, False),\n","   (0.3333333333333333, 10, 0.0, False),\n","   (0.3333333333333333, 5, 0.0, True)],\n","  3: [(0.3333333333333333, 10, 0.0, False),\n","   (0.3333333333333333, 5, 0.0, True),\n","   (0.3333333333333333, 8, 0.0, False)]},\n"," 10: {0: [(0.3333333333333333, 6, 0.0, False),\n","   (0.3333333333333333, 9, 0.0, False),\n","   (0.3333333333333333, 14, 0.0, False)],\n","  1: [(0.3333333333333333, 9, 0.0, False),\n","   (0.3333333333333333, 14, 0.0, False),\n","   (0.3333333333333333, 11, 0.0, True)],\n","  2: [(0.3333333333333333, 14, 0.0, False),\n","   (0.3333333333333333, 11, 0.0, True),\n","   (0.3333333333333333, 6, 0.0, False)],\n","  3: [(0.3333333333333333, 11, 0.0, True),\n","   (0.3333333333333333, 6, 0.0, False),\n","   (0.3333333333333333, 9, 0.0, False)]},\n"," 11: {0: [(1.0, 11, 0, True)],\n","  1: [(1.0, 11, 0, True)],\n","  2: [(1.0, 11, 0, True)],\n","  3: [(1.0, 11, 0, True)]},\n"," 12: {0: [(1.0, 12, 0, True)],\n","  1: [(1.0, 12, 0, True)],\n","  2: [(1.0, 12, 0, True)],\n","  3: [(1.0, 12, 0, True)]},\n"," 13: {0: [(0.3333333333333333, 9, 0.0, False),\n","   (0.3333333333333333, 12, 0.0, True),\n","   (0.3333333333333333, 13, 0.0, False)],\n","  1: [(0.3333333333333333, 12, 0.0, True),\n","   (0.3333333333333333, 13, 0.0, False),\n","   (0.3333333333333333, 14, 0.0, False)],\n","  2: [(0.3333333333333333, 13, 0.0, False),\n","   (0.3333333333333333, 14, 0.0, False),\n","   (0.3333333333333333, 9, 0.0, False)],\n","  3: [(0.3333333333333333, 14, 0.0, False),\n","   (0.3333333333333333, 9, 0.0, False),\n","   (0.3333333333333333, 12, 0.0, True)]},\n"," 14: {0: [(0.3333333333333333, 10, 0.0, False),\n","   (0.3333333333333333, 13, 0.0, False),\n","   (0.3333333333333333, 14, 0.0, False)],\n","  1: [(0.3333333333333333, 13, 0.0, False),\n","   (0.3333333333333333, 14, 0.0, False),\n","   (0.3333333333333333, 15, 1.0, True)],\n","  2: [(0.3333333333333333, 14, 0.0, False),\n","   (0.3333333333333333, 15, 1.0, True),\n","   (0.3333333333333333, 10, 0.0, False)],\n","  3: [(0.3333333333333333, 15, 1.0, True),\n","   (0.3333333333333333, 10, 0.0, False),\n","   (0.3333333333333333, 13, 0.0, False)]},\n"," 15: {0: [(1.0, 15, 0, True)],\n","  1: [(1.0, 15, 0, True)],\n","  2: [(1.0, 15, 0, True)],\n","  3: [(1.0, 15, 0, True)]}}"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["init_state\n"],"metadata":{"id":"_ovKfZf76ZOj","executionInfo":{"status":"ok","timestamp":1741758773891,"user_tz":-330,"elapsed":20,"user":{"displayName":"","userId":""}},"outputId":"02848ebf-1f42-4e75-a5f8-11d6cbce38d6","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["state, reward, done, info = env.step(RIGHT)\n","print(\"state:{0} - reward:{1} - done:{2} - info:{3}\".format(state, reward, done, info))\n"],"metadata":{"id":"RPtLYETH6eBI","executionInfo":{"status":"ok","timestamp":1741758786648,"user_tz":-330,"elapsed":5,"user":{"displayName":"","userId":""}},"outputId":"a25a7658-bf1e-42ca-a18f-75cd12ec22b0","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["state:1 - reward:0.0 - done:False - info:{'prob': 0.3333333333333333}\n"]}]},{"cell_type":"code","source":["pi_frozenlake = lambda s: {\n","    0: RIGHT,\n","    1: DOWN,\n","    2: RIGHT,\n","    3: LEFT,\n","    4: DOWN,\n","    5: LEFT,\n","    6: RIGHT,\n","    7:LEFT,\n","    8: UP,\n","    9: DOWN,\n","    10:LEFT,\n","    11:DOWN,\n","    12:RIGHT,\n","    13:RIGHT,\n","    14:DOWN,\n","    15:LEFT #Stop\n","}[s]\n","print_policy(pi_frozenlake, P, action_symbols=('<', 'v', '>', '^'), n_cols=4)\n"],"metadata":{"id":"4T6m5hYt6hQw","executionInfo":{"status":"ok","timestamp":1741758799680,"user_tz":-330,"elapsed":55,"user":{"displayName":"","userId":""}},"outputId":"2935bea3-c167-45d6-9b40-67910d040a17","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Policy:\n","| 00      > | 01      v | 02      > | 03      < |\n","| 04      v |           | 06      > |           |\n","| 08      ^ | 09      v | 10      < |           |\n","|           | 13      > | 14      v |           |\n"]}]},{"cell_type":"code","source":["print('Reaches goal {:.2f}%. Obtains an average undiscounted return of {:.4f}.'.format(\n","    probability_success(env, pi_frozenlake, goal_state=goal_state) * 100,\n","    mean_return(env, pi_frozenlake)))"],"metadata":{"id":"XLI_HQgd6i89","executionInfo":{"status":"ok","timestamp":1741758839435,"user_tz":-330,"elapsed":25,"user":{"displayName":"","userId":""}},"outputId":"15cb0ffc-8475-4618-e744-f7b17c830997","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Reaches goal 10.00%. Obtains an average undiscounted return of 0.1000.\n"]}]},{"cell_type":"code","source":["pi_2 = lambda s: {\n","    0: DOWN,\n","    1: RIGHT,\n","    2: UP,\n","    3: LEFT,\n","    4: RIGHT,\n","    5: UP,\n","    6: DOWN,\n","    7: RIGHT,\n","    8: LEFT,\n","    9: DOWN,\n","    10: RIGHT,\n","    11: UP,\n","    12: LEFT,\n","    13: DOWN,\n","    14: RIGHT,\n","    15: LEFT\n","}[s]\n","\n","\n","print(\"Name:Himavath M\")\n","print(\"Register Number:212223240053\")\n","print_policy(pi_2, P, action_symbols=('<', 'v', '>', '^'), n_cols=4)"],"metadata":{"id":"aB9aPvIf6xjv","executionInfo":{"status":"ok","timestamp":1741759970356,"user_tz":-330,"elapsed":82,"user":{"displayName":"","userId":""}},"outputId":"e024023b-8d66-4003-b21e-aeaf6e170034","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Name:Himavath M\n","Register Number:212223240053\n","Policy:\n","| 00      v | 01      > | 02      ^ | 03      < |\n","| 04      > |           | 06      v |           |\n","| 08      < | 09      v | 10      > |           |\n","|           | 13      v | 14      > |           |\n"]}]},{"cell_type":"code","source":["# Find the probability of success and the mean return of you your policy\n","print('Custom policy reaches goal {:.2f}%. Obtains an average undiscounted return of {:.4f}.'.format(\n","    probability_success(env, pi_2, goal_state=goal_state) * 100,\n","    mean_return(env, pi_2)))\n"],"metadata":{"id":"XDwA0UvE8elR","executionInfo":{"status":"ok","timestamp":1741760034506,"user_tz":-330,"elapsed":35,"user":{"displayName":"","userId":""}},"outputId":"1fb44573-09db-4cec-c3d7-688b38152bc1","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Custom policy reaches goal 0.00%. Obtains an average undiscounted return of 0.0000.\n"]}]},{"cell_type":"code","source":["# Compare your policy with the first policy\n","#"],"metadata":{"id":"dkt2si6V8h_Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def policy_evaluation(pi, P, gamma=1.0, theta=1e-10):\n","    V = np.zeros(len(P), dtype=np.float64)\n","    while True:\n","        H = 0\n","        for s in range(len(P)):\n","            v = V[s]\n","            new_v = 0\n","            action = pi(s)\n","            for prob, next_state, reward, done in P[s][action]:\n","                new_v += prob * (reward + gamma * V[next_state])\n","            V[s] = new_v\n","            H = max(H, abs(v - V[s]))\n","        if H < theta:\n","            break\n","    return V\n"],"metadata":{"id":"yFtrDvxQ8nkS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["V1 = policy_evaluation(pi_frozenlake, P, gamma=0.99)\n","print_state_value_function(V1, P, n_cols=4, prec=5)\n"],"metadata":{"id":"i3YD0xTvA5Z4","executionInfo":{"status":"ok","timestamp":1741760475087,"user_tz":-330,"elapsed":92,"user":{"displayName":"","userId":""}},"outputId":"a0edf37d-9a01-44e0-9f3e-437f19585f82","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["State-value function:\n","| 00 0.11448 | 01 0.08191 | 02 0.13372 | 03 0.06586 |\n","| 04 0.15053 |           | 06 0.20562 |           |\n","| 08 0.30562 | 09 0.46997 | 10 0.48938 |           |\n","|           | 13 0.62915 | 14 0.80739 |           |\n"]}]},{"cell_type":"code","source":["V2 = policy_evaluation(pi_2, P, gamma=0.99)\n","print_state_value_function(V2, P, n_cols=4, prec=5)"],"metadata":{"id":"ZptRzGhuA7u_","executionInfo":{"status":"ok","timestamp":1741760496078,"user_tz":-330,"elapsed":7,"user":{"displayName":"","userId":""}},"outputId":"555174ba-e684-4d9c-f384-eb3c868f53ad","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["State-value function:\n","| 00    0.0 | 01    0.0 | 02    0.0 | 03    0.0 |\n","| 04    0.0 |           | 06 0.07436 |           |\n","| 08    0.0 | 09 0.17327 | 10 0.22535 |           |\n","|           | 13 0.29971 | 14 0.6085 |           |\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"KkLf4-SsobQ9"}},{"cell_type":"code","source":["if np.sum(V1 >= V2) == len(V1):\n","    print(\"The first policy is the better policy\")\n","elif np.sum(V2 >= V1) == len(V2):\n","    print(\"The second policy is the better policy\")\n","else:\n","    print(\"Both policies have their merits.\")"],"metadata":{"id":"YKG3QQz0BDJk","executionInfo":{"status":"ok","timestamp":1741760512644,"user_tz":-330,"elapsed":240,"user":{"displayName":"","userId":""}},"outputId":"ffa8394f-2aa2-49ad-de55-b438ad7ade3d","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The first policy is the better policy\n"]}]}],"metadata":{"colab":{"toc_visible":true,"provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1741767330867}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}